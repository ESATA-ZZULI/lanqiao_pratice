C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 02:10:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\APP\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <ds1302.H>
   3          #include <iic.H>
   4          
   5          typedef unsigned char uchar;
   6          typedef unsigned int uint;
   7            
   8          sbit L1=P0^0;
   9          sbit L2=P0^1;
  10          sbit S7=P3^0;
  11          sbit S6=P3^1;
  12          sbit S5=P3^2;
  13          sbit S4=P3^3;
  14          
  15          uchar code dpnum[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf};
  16          uchar code dpdotnum[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  17          uchar code Time_Write[]={0x80,0x82,0x84,0x86,0x88,0x8a,0x8c};
  18          uchar code Time_Read[]={0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};
  19          uchar code Time_Init[]={0x00,0x30,0x08,0x24,0x03,0x04,0x22};
  20          uchar Time_temp[7]={0};
  21          
  22          uchar humth=50; //湿度阈值
  23          uchar Dout=0;
  24          uchar Vout_hum=0;
  25          uchar S7state=1;//默认自动工作模式
  26          uchar S6state1=2;
  27          uchar S6state2=1;
  28          
  29          void System_Init();
  30          void DS1302_Init();
  31          void DS1302_Read();
  32          void delayms(uchar ms);
  33          void display_bit(uchar pos,uchar dat);
  34          void display();
  35          uchar PCF8591_Read(uchar add);
  36          void JDQ_working();
  37          void KeyS7();
  38          void key_working();
  39          void AT24C02_Write(uchar add,uchar dat);
  40          uchar AT24C02_Read(uchar add);
  41          void FMQ_Working();
  42          void S6state2_Working();
  43          
  44          void main()
  45          {
  46   1        System_Init();
  47   1        AT24C02_Write(0x01,50);
  48   1        DS1302_Init();
  49   1        while(1)
  50   1        {
  51   2          DS1302_Read();
  52   2          Dout=PCF8591_Read(0x03);
  53   2          Vout_hum=Dout*99/255;
  54   2          //display();
C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 02:10:38 PAGE 2   

  55   2          KeyS7();
  56   2          key_working();
  57   2        }
  58   1      }
  59          
  60          void System_Init()
  61          {
  62   1        P2 = (P2 & 0x1f) | 0x80;
  63   1        P0 = 0xff;
  64   1        P2 = (P2 & 0x1f) | 0xa0;
  65   1        P0 = 0x00;
  66   1        P2 = (P2 & 0x1f) | 0xc0;
  67   1        P0 = 0xff;
  68   1        P2 = (P2 & 0x1f) | 0xe0;
  69   1        P0 = 0xff;
  70   1      }
  71          void DS1302_Init()
  72          {
  73   1        uchar i;
  74   1        for(i=0;i<7;i++)
  75   1        {
  76   2          Write_Ds1302_Byte(Time_Write[i],Time_Init[i]);
  77   2        }
  78   1      }
  79          void DS1302_Read()
  80          {
  81   1        uchar i;
  82   1        for(i=0;i<7;i++)
  83   1        {
  84   2          Time_temp[i]=Read_Ds1302_Byte(Time_Read[i]);
  85   2        }
  86   1      }
  87          void delayms(uchar ms)
  88          {
  89   1        uint i,j;
  90   1        for(i=ms;i>0;i--)
  91   1          for(j=810;j>0;j--);
  92   1      }
  93          void display_bit(uchar pos,uchar dat)
  94          {
  95   1        P2 = (P2 & 0x1f) | 0xc0;
  96   1        P0 = 0x01 << pos;
  97   1        P2 = (P2 & 0x1f) | 0xe0;
  98   1        P0 = dat;
  99   1      }
 100          void display()
 101          {
 102   1        display_bit(0,dpnum[Time_temp[2]/16]);
 103   1        delayms(1);
 104   1        display_bit(1,dpnum[Time_temp[2]%16]);
 105   1        delayms(1);
 106   1        display_bit(2,dpnum[11]);
 107   1        delayms(1);
 108   1        display_bit(3,dpnum[Time_temp[1]/16]);
 109   1        delayms(1);
 110   1        display_bit(4,dpnum[Time_temp[1]%16]);
 111   1        delayms(1);
 112   1        display_bit(5,dpnum[10]);
 113   1        delayms(1);
 114   1        display_bit(6,dpnum[Vout_hum/10]);
 115   1        delayms(1);
 116   1        display_bit(7,dpnum[Vout_hum%10]);
C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 02:10:38 PAGE 3   

 117   1        delayms(1);
 118   1        P2 = (P2 & 0x1f) | 0xc0;
 119   1        P0 = 0xff;
 120   1        P2 = (P2 & 0x1f) | 0xe0;
 121   1        P0 = 0xff;
 122   1      }
 123          uchar PCF8591_Read(uchar add)
 124          {
 125   1        uchar temp;
 126   1        IIC_Start();
 127   1        IIC_SendByte(0x90);
 128   1        IIC_WaitAck();
 129   1        
 130   1        IIC_SendByte(add);
 131   1        IIC_WaitAck();
 132   1        IIC_Stop();
 133   1        
 134   1        IIC_Start();
 135   1        IIC_SendByte(0x91);
 136   1        IIC_WaitAck();
 137   1        
 138   1        temp=IIC_RecByte();
 139   1        IIC_SendAck(1);
 140   1        IIC_Stop();
 141   1        return temp;
 142   1      }
 143          void JDQ_working()
 144          {
 145   1        humth=AT24C02_Read(0x01);
 146   1        if(Vout_hum<humth)
 147   1        {
 148   2          P2 = (P2 & 0x1f) | 0xa0;
 149   2          P0 = 0x10;
 150   2        }
 151   1        else if(Vout_hum>=humth)
 152   1        {
 153   2          P2 = (P2 & 0x1f) | 0xa0;
 154   2          P0 = 0x00;
 155   2        }
 156   1      }
 157          void KeyS7()
 158          {
 159   1        if(S7==0)
 160   1        {
 161   2          delayms(5);
 162   2          if(S7==0)
 163   2          {
 164   3            if(S7state==1)
 165   3              S7state=2; //1为自动工作模式，2为手动工作模式
 166   3            else if(S7state==2)
 167   3              S7state=1;
 168   3            while(S7==0);
 169   3          }
 170   2        }
 171   1        switch(S7state)
 172   1        {
 173   2          case 1:
 174   2            P2 = (P2 & 0x1f) | 0x80;
 175   2            P0 = 0xfe;
 176   2            if(S6==0)
 177   2            {
 178   3              delayms(3);
C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 02:10:38 PAGE 4   

 179   3              if(S6==0)
 180   3              {
 181   4                if(S6state1==1)
 182   4                  S6state1=2; //自动工作模式下，退出设置阈值界面
 183   4                else if(S6state1==2)
 184   4                  S6state1=1; //自动工作模式下，进入设置阈值界面
 185   4                while(S6==0);
 186   4              }
 187   3            }
 188   2            JDQ_working();
 189   2            break;
 190   2          case 2:
 191   2            P2 = (P2 & 0x1f) | 0x80;
 192   2            //L2=0;
 193   2            P0 &=0xfd;
 194   2      //      S6state2_Working();
 195   2      //      P2 = (P2 & 0x1f) | 0x00;
 196   2      //      P0 = 0x00;
 197   2      //      P2 = (P2 & 0x1f) | 0xa0;
 198   2      //      P0 &= 0xbF;
 199   2            if(S6==0)
 200   2            {
 201   3              delayms(3);
 202   3              if(S6==0)
 203   3              {
 204   4                if(S6state2==1)
 205   4                  S6state2=2;  //手动模式下，关闭蜂鸣器提醒
 206   4                else if(S6state2==2)
 207   4                  S6state2=1;  //手动模式下，打开蜂鸣器提醒
 208   4                while(S6==0);  
 209   4              }
 210   3            }
 211   2            else if(S5==0)
 212   2            {
 213   3              delayms(5);//加上延时之后继电器会叫，真的叫
 214   3              if(S5==0)
 215   3              {
 216   4                P2 = (P2 & 0x1f) | 0xa0;
 217   4                P0 |= 0x10;
 218   4              }
 219   3            }
 220   2            else if(S4==0)
 221   2            {
 222   3              //delayms(5);
 223   3              if(S4==0)
 224   3              {
 225   4                P2 = (P2 & 0x1f) | 0xa0;
 226   4                P0 &= 0xef;
 227   4              }
 228   3            }
 229   2            break;
 230   2        } 
 231   1      }
 232          void S6state2_Working()
 233          {
 234   1        switch(S6state2)
 235   1        {
 236   2          case 1:
 237   2            FMQ_Working();
 238   2            break;
 239   2          case 2:
 240   2            P2 = (P2 & 0x1f) | 0xa0;
C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 02:10:38 PAGE 5   

 241   2            P0 &= 0xbF;
 242   2            break;
 243   2        }
 244   1      }
 245          void key_working()
 246          {
 247   1        humth=AT24C02_Read(0x01);
 248   1        switch(S6state1)
 249   1        {
 250   2          case 1:
 251   2            if(S5==0)
 252   2            {
 253   3              delayms(5);
 254   3              if(S5==0)
 255   3              {
 256   4                humth++;
 257   4                while(S5==0);
 258   4              }
 259   3            }
 260   2            else if(S4==0)
 261   2            {
 262   3              delayms(5);
 263   3              if(S4==0)
 264   3              {
 265   4                humth--;
 266   4                while(S4==0);
 267   4              }
 268   3            }
 269   2            if(humth>99)
 270   2              humth=0;
 271   2            AT24C02_Write(0x01,humth);
 272   2            display_bit(0,dpnum[11]);
 273   2            delayms(1);
 274   2            display_bit(1,dpnum[11]);
 275   2            delayms(1);
 276   2            display_bit(2,dpnum[10]);
 277   2            delayms(1);
 278   2            display_bit(3,dpnum[10]);
 279   2            delayms(1);
 280   2            display_bit(4,dpnum[10]);
 281   2            delayms(1);
 282   2            display_bit(5,dpnum[10]);
 283   2            delayms(1);
 284   2            display_bit(6,dpnum[humth/10]);
 285   2            delayms(1);
 286   2            display_bit(7,dpnum[humth%10]);
 287   2            delayms(1);
 288   2            P2 = (P2 & 0x1f) | 0xc0;
 289   2            P0 = 0xff;
 290   2            P2 = (P2 & 0x1f) | 0xe0;
 291   2            P0 = 0xff;
 292   2            break;
 293   2          case 2:
 294   2            AT24C02_Write(0x01,humth);
 295   2            display();
 296   2            break;
 297   2        }
 298   1      }
 299          void AT24C02_Write(uchar add,uchar dat)
 300          {
 301   1        IIC_Start();
 302   1        IIC_SendByte(0xa0);
C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 02:10:38 PAGE 6   

 303   1        IIC_WaitAck();
 304   1        
 305   1        IIC_SendByte(add);
 306   1        IIC_WaitAck();
 307   1        
 308   1        IIC_SendByte(dat);
 309   1        IIC_WaitAck();
 310   1        IIC_Stop();
 311   1      }
 312          uchar AT24C02_Read(uchar add)
 313          {
 314   1        uchar temp;
 315   1        IIC_Start();
 316   1        IIC_SendByte(0xa0);
 317   1        IIC_WaitAck();
 318   1        
 319   1        IIC_SendByte(add);
 320   1        IIC_WaitAck();
 321   1        IIC_Stop();
 322   1        
 323   1        IIC_Start();
 324   1        IIC_SendByte(0xa1);
 325   1        IIC_WaitAck();
 326   1        
 327   1        temp=IIC_RecByte();
 328   1        IIC_SendAck(1);
 329   1        IIC_Stop();
 330   1        return temp;
 331   1      }
 332          void FMQ_Working()
 333          {
 334   1        humth=AT24C02_Read(0x01);
 335   1        if(Vout_hum<humth)
 336   1        {
 337   2          P2 = (P2 & 0x1f) | 0xa0;
 338   2          P0 |= 0x40; //打开蜂鸣器
 339   2        }
 340   1        else if(Vout_hum>=humth)
 341   1        {
 342   2          P2 = (P2 & 0x1f) | 0xa0;
 343   2          P0 &= 0xbF;
 344   2        }
 345   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1001    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
